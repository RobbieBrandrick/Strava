// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Strava.Core.Data;

namespace Strava.Core.Migrations
{
    [DbContext(typeof(StravaDbContext))]
    partial class StravaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.3");

            modelBuilder.Entity("Strava.Core.Models.Activity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<double?>("AverageSpeed")
                        .HasColumnType("REAL");

                    b.Property<double?>("Distance")
                        .HasColumnType("REAL");

                    b.Property<int?>("ElapsedTime")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("ElevationGain")
                        .HasColumnType("REAL");

                    b.Property<double?>("ElevationHigh")
                        .HasColumnType("REAL");

                    b.Property<double?>("ElevationLow")
                        .HasColumnType("REAL");

                    b.Property<DateTime>("LocalDate")
                        .HasColumnType("TEXT");

                    b.Property<double?>("MaxSpeed")
                        .HasColumnType("REAL");

                    b.Property<int?>("MovingTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Timezone")
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UTCDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Strava.Core.Models.StravaApiTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Request")
                        .HasColumnType("TEXT");

                    b.Property<string>("Resouce")
                        .HasColumnType("TEXT");

                    b.Property<string>("Response")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("StravaApiTransactions");
                });

            modelBuilder.Entity("Strava.Core.Models.StravaToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccessToken")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Expiry")
                        .HasColumnType("TEXT");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
